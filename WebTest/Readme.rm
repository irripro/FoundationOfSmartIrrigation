{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "使用 Visual Studio Code (VS Code) 进行 Python + JavaScript 的 Web 网站前端开发是一个非常高效的选择。以下是一些步骤和建议，帮助你设置和优化开发环境：\n",
    "\n",
    "### 1. 安装 VS Code\n",
    "如果你还没有安装 VS Code，可以从 [VS Code 官方网站](https://code.visualstudio.com/) 下载并安装。\n",
    "\n",
    "### 2. 安装必要的扩展\n",
    "为了更好地支持 Python 和 JavaScript 开发，建议安装以下扩展：\n",
    "\n",
    "- **Python**: 由 Microsoft 提供，提供代码补全、Linting、调试等功能。\n",
    "- **Pylint** 或 **flake8**: 用于代码静态分析。\n",
    "- **JavaScript (ES6) code snippets**: 提供 JavaScript 代码片段。\n",
    "- **Live Server**: 用于启动本地服务器，方便预览网页。\n",
    "- **Prettier - Code formatter**: 自动格式化代码。\n",
    "- **ESLint**: JavaScript 代码静态检查工具。\n",
    "\n",
    "你可以在 VS Code 的扩展市场中搜索并安装这些扩展。\n",
    "\n",
    "### 3. 创建项目结构\n",
    "创建一个新的项目目录，并设置基本的文件结构。例如：\n",
    "\n",
    "```\n",
    "my-web-project/\n",
    "├── backend/\n",
    "│   ├── app.py\n",
    "│   └── requirements.txt\n",
    "├── frontend/\n",
    "│   ├── index.html\n",
    "│   ├── styles.css\n",
    "│   └── script.js\n",
    "├── .vscode/\n",
    "│   ├── launch.json\n",
    "│   └── settings.json\n",
    "└── README.md\n",
    "```\n",
    "\n",
    "### 4. 配置后端（Python）\n",
    "在 `backend` 目录中创建一个简单的 Flask 应用。\n",
    "\n",
    "#### `app.py`\n",
    "```python\n",
    "from flask import Flask, render_template\n",
    "\n",
    "app = Flask(__name__)\n",
    "\n",
    "@app.route('/')\n",
    "def home():\n",
    "    return render_template('index.html')\n",
    "\n",
    "if __name__ == '__main__':\n",
    "    app.run(debug=True)\n",
    "```\n",
    "\n",
    "#### `requirements.txt`\n",
    "```\n",
    "Flask==2.0.1\n",
    "```\n",
    "\n",
    "### 5. 配置前端（HTML, CSS, JavaScript）\n",
    "在 `frontend` 目录中创建基本的前端文件。\n",
    "\n",
    "#### `index.html`\n",
    "```html\n",
    "<!DOCTYPE html>\n",
    "<html lang=\"en\">\n",
    "<head>\n",
    "    <meta charset=\"UTF-8\">\n",
    "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n",
    "    <title>My Web Project</title>\n",
    "    <link rel=\"stylesheet\" href=\"styles.css\">\n",
    "</head>\n",
    "<body>\n",
    "    <h1>Hello, World!</h1>\n",
    "    <button id=\"myButton\">Click me</button>\n",
    "\n",
    "    <script src=\"script.js\"></script>\n",
    "</body>\n",
    "</html>\n",
    "```\n",
    "\n",
    "#### `styles.css`\n",
    "```css\n",
    "body {\n",
    "    font-family: Arial, sans-serif;\n",
    "}\n",
    "\n",
    "h1 {\n",
    "    color: blue;\n",
    "}\n",
    "```\n",
    "\n",
    "#### `script.js`\n",
    "```javascript\n",
    "document.addEventListener('DOMContentLoaded', function() {\n",
    "    document.getElementById('myButton').addEventListener('click', function() {\n",
    "        alert('Button clicked!');\n",
    "    });\n",
    "});\n",
    "```\n",
    "\n",
    "### 6. 配置 VS Code\n",
    "在 `.vscode` 目录中创建必要的配置文件。\n",
    "\n",
    "#### `launch.json`\n",
    "```json\n",
    "{\n",
    "    \"version\": \"0.2.0\",\n",
    "    \"configurations\": [\n",
    "        {\n",
    "            \"name\": \"Python: Flask\",\n",
    "            \"type\": \"python\",\n",
    "            \"request\": \"launch\",\n",
    "            \"module\": \"flask\",\n",
    "            \"env\": {\n",
    "                \"FLASK_APP\": \"app.py\",\n",
    "                \"FLASK_ENV\": \"development\"\n",
    "            },\n",
    "            \"args\": [\n",
    "                \"run\",\n",
    "                \"--no-debugger\",\n",
    "                \"--no-reload\"\n",
    "            ],\n",
    "            \"jinja\": true\n",
    "        }\n",
    "    ]\n",
    "}\n",
    "```\n",
    "\n",
    "#### `settings.json`\n",
    "```json\n",
    "{\n",
    "    \"python.pythonPath\": \"venv/bin/python\",  # 根据你的虚拟环境路径调整\n",
    "    \"editor.formatOnSave\": true,\n",
    "    \"eslint.validate\": [\n",
    "        \"javascript\",\n",
    "        \"javascriptreact\"\n",
    "    ],\n",
    "    \"prettier.tabWidth\": 2\n",
    "}\n",
    "```\n",
    "\n",
    "### 7. 启动开发环境\n",
    "1. **启动 Flask 服务器**：\n",
    "   - 打开 VS Code 终端（Terminal -> New Terminal）。\n",
    "   - 导航到 `backend` 目录。\n",
    "   - 创建虚拟环境并激活：\n",
    "     ```sh\n",
    "     python3 -m venv venv\n",
    "     source venv/bin/activate  # Windows: venv\\Scripts\\activate\n",
    "     ```\n",
    "   - 安装依赖：\n",
    "     ```sh\n",
    "     pip install -r requirements.txt\n",
    "     ```\n",
    "   - 运行 Flask 应用：\n",
    "     ```sh\n",
    "     flask run\n",
    "     ```\n",
    "\n",
    "2. **启动 Live Server**：\n",
    "   - 打开 `frontend/index.html` 文件。\n",
    "   - 右键点击编辑器窗口，选择 \"Open with Live Server\"。\n",
    "\n",
    "### 8. 调试和测试\n",
    "- **Python 调试**：使用 `launch.json` 中配置的调试配置启动调试会话。\n",
    "- **JavaScript 调试**：使用浏览器的开发者工具（通常是 F12 键）进行调试。\n",
    "\n",
    "### 9. 版本控制\n",
    "建议使用 Git 进行版本控制。在项目根目录下初始化 Git 仓库：\n",
    "\n",
    "```sh\n",
    "git init\n",
    "git add .\n",
    "git commit -m \"Initial commit\"\n",
    "```\n",
    "\n",
    "### 总结\n",
    "通过以上步骤，你可以使用 VS Code 进行 Python + JavaScript 的 Web 网站前端开发。VS Code 的强大功能和丰富的扩展生态将使你的开发过程更加高效和愉快。如果有任何问题或需要进一步的帮助，请随时提问。"
   ]
  }
 ],
 "metadata": {
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
